{"ast":null,"code":"import _defineProperty from \"/Users/henderson/Documents/Workspace/React-Projects/2019/ecommerce-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/henderson/Documents/Workspace/React-Projects/2019/ecommerce-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/henderson/Documents/Workspace/React-Projects/2019/ecommerce-app/src/components/sign-in/sign-in.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from \"react\";\nimport \"./sign-in.scss\";\nimport FormInput from \"../form-input/form-input\";\nimport CustomButton from \"../custom-button/custom-button\";\nimport { auth, signInWithGoogle } from \"../../firebase/firebase.utils\";\n\nconst SignIn = () => {\n  const _useState = useState({\n    email: \"\",\n    password: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        signInState = _useState2[0],\n        setsignInState = _useState2[1];\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const email = signInState.email,\n          password = signInState.password;\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      setsignInState({\n        email: \"\",\n        password: \"\"\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = e => {\n    const _e$target = e.target,\n          value = _e$target.value,\n          name = _e$target.name;\n    setsignInState(_objectSpread({}, signInState, {\n      [name]: value\n    }));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"sign-in\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"I already have an account\"), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Sign in with your email and password\"), React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: signInState.email,\n    handleChange: handleChange,\n    required: true,\n    label: \"email\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: signInState.password,\n    handleChange: handleChange,\n    required: true,\n    label: \"password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"buttons\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(CustomButton, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \" Sign in \"), React.createElement(CustomButton, {\n    onClick: signInWithGoogle,\n    isGoogleSignIn: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Sign in with Google\"))));\n};\n\nexport default SignIn;","map":{"version":3,"sources":["/Users/henderson/Documents/Workspace/React-Projects/2019/ecommerce-app/src/components/sign-in/sign-in.js"],"names":["React","useState","FormInput","CustomButton","auth","signInWithGoogle","SignIn","email","password","signInState","setsignInState","handleSubmit","e","preventDefault","signInWithEmailAndPassword","error","console","log","handleChange","target","value","name"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,gBAAP;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,YAAP,MAAyB,gCAAzB;AACA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,+BAAvC;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA,oBACmBL,QAAQ,CAAC;AAAEM,IAAAA,KAAK,EAAE,EAAT;AAAaC,IAAAA,QAAQ,EAAE;AAAvB,GAAD,CAD3B;AAAA;AAAA,QACZC,WADY;AAAA,QACCC,cADD;;AAGnB,QAAMC,YAAY,GAAG,MAAMC,CAAN,IAAW;AAC9BA,IAAAA,CAAC,CAACC,cAAF;AAD8B,UAGtBN,KAHsB,GAGFE,WAHE,CAGtBF,KAHsB;AAAA,UAGfC,QAHe,GAGFC,WAHE,CAGfD,QAHe;;AAK9B,QAAI;AACF,YAAMJ,IAAI,CAACU,0BAAL,CAAgCP,KAAhC,EAAuCC,QAAvC,CAAN;AACAE,MAAAA,cAAc,CAAC;AAAEH,QAAAA,KAAK,EAAE,EAAT;AAAaC,QAAAA,QAAQ,EAAE;AAAvB,OAAD,CAAd;AACD,KAHD,CAGE,OAAOO,KAAP,EAAc;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,GAXD;;AAaA,QAAMG,YAAY,GAAGN,CAAC,IAAI;AAAA,sBACAA,CAAC,CAACO,MADF;AAAA,UAChBC,KADgB,aAChBA,KADgB;AAAA,UACTC,IADS,aACTA,IADS;AAExBX,IAAAA,cAAc,mBAAMD,WAAN;AAAmB,OAACY,IAAD,GAAQD;AAA3B,OAAd;AACD,GAHD;;AAKA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4CAFF,EAIE;AAAM,IAAA,QAAQ,EAAET,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,KAAK,EAAEF,WAAW,CAACF,KAHrB;AAIE,IAAA,YAAY,EAAEW,YAJhB;AAKE,IAAA,QAAQ,MALV;AAME,IAAA,KAAK,EAAC,OANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EASE,oBAAC,SAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAET,WAAW,CAACD,QAHrB;AAIE,IAAA,YAAY,EAAEU,YAJhB;AAKE,IAAA,QAAQ,MALV;AAME,IAAA,KAAK,EAAC,UANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAkBE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,YAAD;AAAc,IAAA,IAAI,EAAC,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,EAEE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEb,gBAAvB;AAAyC,IAAA,cAAc,MAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFF,CAlBF,CAJF,CADF;AAgCD,CArDD;;AAuDA,eAAeC,MAAf","sourcesContent":["import React, { useState } from \"react\";\nimport \"./sign-in.scss\";\nimport FormInput from \"../form-input/form-input\";\nimport CustomButton from \"../custom-button/custom-button\";\nimport { auth, signInWithGoogle } from \"../../firebase/firebase.utils\";\n\nconst SignIn = () => {\n  const [signInState, setsignInState] = useState({ email: \"\", password: \"\" });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    const { email, password } = signInState;\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      setsignInState({ email: \"\", password: \"\" });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const handleChange = e => {\n    const { value, name } = e.target;\n    setsignInState({ ...signInState, [name]: value });\n  };\n\n  return (\n    <div className=\"sign-in\">\n      <h2>I already have an account</h2>\n      <span>Sign in with your email and password</span>\n\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          type=\"email\"\n          name=\"email\"\n          value={signInState.email}\n          handleChange={handleChange}\n          required\n          label=\"email\"\n        />\n        <FormInput\n          type=\"password\"\n          name=\"password\"\n          value={signInState.password}\n          handleChange={handleChange}\n          required\n          label=\"password\"\n        />\n\n        <div className=\"buttons\">\n          <CustomButton type=\"submit\"> Sign in </CustomButton>\n          <CustomButton onClick={signInWithGoogle} isGoogleSignIn>\n            Sign in with Google\n          </CustomButton>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default SignIn;\n"]},"metadata":{},"sourceType":"module"}