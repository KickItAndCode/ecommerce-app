{"ast":null,"code":"import _slicedToArray from \"/Users/henderson/Documents/Workspace/React-Projects/2019/ecommerce-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/henderson/Documents/Workspace/React-Projects/2019/ecommerce-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/henderson/Documents/Workspace/React-Projects/2019/ecommerce-app/src/context/cartProvider.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer } from \"react\";\nimport { CartActionTypes } from \"../actions/cart.types\";\nexport const CartContext = React.createContext({});\nexport const CartConsumer = CartContext.Consumer;\n\nconst reducer = (cartState = {\n  hidden: true\n}, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, cartState, {\n        hidden: !cartState.hidden\n      });\n\n    default:\n      return cartState;\n  }\n};\n\nconst CartProvider = props => {\n  const _useReducer = useReducer(reducer, {}),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        cartState = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  return React.createElement(CartContext.Provider, {\n    value: {\n      cartState,\n      dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default CartProvider;","map":{"version":3,"sources":["/Users/henderson/Documents/Workspace/React-Projects/2019/ecommerce-app/src/context/cartProvider.js"],"names":["React","useReducer","CartActionTypes","CartContext","createContext","CartConsumer","Consumer","reducer","cartState","hidden","action","type","TOGGLE_CART_HIDDEN","CartProvider","props","dispatch","children"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,eAAT,QAAgC,uBAAhC;AAEA,OAAO,MAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,CAAoB,EAApB,CAApB;AACP,OAAO,MAAMC,YAAY,GAAGF,WAAW,CAACG,QAAjC;;AAEP,MAAMC,OAAO,GAAG,CAACC,SAAS,GAAG;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAb,EAA+BC,MAA/B,KAA0C;AACxD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,eAAe,CAACU,kBAArB;AACE,+BAAYJ,SAAZ;AAAuBC,QAAAA,MAAM,EAAE,CAACD,SAAS,CAACC;AAA1C;;AACF;AACE,aAAOD,SAAP;AAJJ;AAMD,CAPD;;AASA,MAAMK,YAAY,GAAGC,KAAK,IAAI;AAAA,sBACEb,UAAU,CAACM,OAAD,EAAU,EAAV,CADZ;AAAA;AAAA,QACrBC,SADqB;AAAA,QACVO,QADU;;AAG5B,SACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEP,MAAAA,SAAF;AAAaO,MAAAA;AAAb,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KAAK,CAACE,QADT,CADF;AAKD,CARD;;AAUA,eAAeH,YAAf","sourcesContent":["import React, { useReducer } from \"react\";\nimport { CartActionTypes } from \"../actions/cart.types\";\n\nexport const CartContext = React.createContext({});\nexport const CartConsumer = CartContext.Consumer;\n\nconst reducer = (cartState = { hidden: true }, action) => {\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return { ...cartState, hidden: !cartState.hidden };\n    default:\n      return cartState;\n  }\n};\n\nconst CartProvider = props => {\n  const [cartState, dispatch] = useReducer(reducer, {});\n\n  return (\n    <CartContext.Provider value={{ cartState, dispatch }}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}