{"ast":null,"code":"import _slicedToArray from \"/Users/henderson/Documents/Workspace/React-Projects/2019/ecommerce-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/henderson/Documents/Workspace/React-Projects/2019/ecommerce-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/henderson/Documents/Workspace/React-Projects/2019/ecommerce-app/src/context/cartProvider.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useReducer, useEffect } from \"react\";\nimport { CartActionTypes } from \"../actions/cart.types\";\nimport { addItemToCart, removeItemFromCart } from \"../utils/cart.utils\";\nimport { useLocalStorage } from \"../hooks/useLocalStorage\";\nexport const CartContext = React.createContext({});\nexport const CartConsumer = CartContext.Consumer;\n\nconst reducer = (cartState = {\n  hidden: true,\n  cartItems: []\n}, action) => {\n  let tempState;\n\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return _objectSpread({}, cartState, {\n        hidden: !cartState.hidden\n      });\n\n    case CartActionTypes.ADD_ITEM:\n      tempState = _objectSpread({}, cartState, {\n        cartItems: addItemToCart(cartState.cartItems, action.payload)\n      });\n      localStorage.setItem(\"state\", JSON.stringify(tempState));\n      return tempState;\n\n    case CartActionTypes.REMOVE_ITEM:\n      tempState = _objectSpread({}, cartState, {\n        cartItems: removeItemFromCart(cartState.cartItems, action.payload)\n      });\n      localStorage.setItem(\"state\", JSON.stringify(tempState));\n      return tempState;\n\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      tempState = _objectSpread({}, cartState, {\n        cartItems: cartState.cartItems.filter(cartItem => cartItem.id !== action.payload.id)\n      });\n      localStorage.setItem(\"state\", JSON.stringify(tempState));\n      return tempState;\n\n    default:\n      return cartState;\n  }\n};\n\nconst CartProvider = props => {\n  const INITIAL_STATE = {\n    hidden: true,\n    cartItems: []\n  };\n\n  const _useReducer = useReducer(reducer, JSON.parse(localStorage.getItem(\"state\")) || INITIAL_STATE),\n        _useReducer2 = _slicedToArray(_useReducer, 2),\n        cartState = _useReducer2[0],\n        dispatch = _useReducer2[1];\n\n  return React.createElement(CartContext.Provider, {\n    value: {\n      cartState,\n      dispatch\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default CartProvider;","map":{"version":3,"sources":["/Users/henderson/Documents/Workspace/React-Projects/2019/ecommerce-app/src/context/cartProvider.js"],"names":["React","useReducer","useEffect","CartActionTypes","addItemToCart","removeItemFromCart","useLocalStorage","CartContext","createContext","CartConsumer","Consumer","reducer","cartState","hidden","cartItems","action","tempState","type","TOGGLE_CART_HIDDEN","ADD_ITEM","payload","localStorage","setItem","JSON","stringify","REMOVE_ITEM","CLEAR_ITEM_FROM_CART","filter","cartItem","id","CartProvider","props","INITIAL_STATE","parse","getItem","dispatch","children"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,SAA5B,QAA6C,OAA7C;AACA,SAASC,eAAT,QAAgC,uBAAhC;AACA,SAASC,aAAT,EAAwBC,kBAAxB,QAAkD,qBAAlD;AACA,SAASC,eAAT,QAAgC,0BAAhC;AAEA,OAAO,MAAMC,WAAW,GAAGP,KAAK,CAACQ,aAAN,CAAoB,EAApB,CAApB;AACP,OAAO,MAAMC,YAAY,GAAGF,WAAW,CAACG,QAAjC;;AAEP,MAAMC,OAAO,GAAG,CAACC,SAAS,GAAG;AAAEC,EAAAA,MAAM,EAAE,IAAV;AAAgBC,EAAAA,SAAS,EAAE;AAA3B,CAAb,EAA8CC,MAA9C,KAAyD;AACvE,MAAIC,SAAJ;;AACA,UAAQD,MAAM,CAACE,IAAf;AACE,SAAKd,eAAe,CAACe,kBAArB;AACE,+BAAYN,SAAZ;AAAuBC,QAAAA,MAAM,EAAE,CAACD,SAAS,CAACC;AAA1C;;AACF,SAAKV,eAAe,CAACgB,QAArB;AACEH,MAAAA,SAAS,qBACJJ,SADI;AAEPE,QAAAA,SAAS,EAAEV,aAAa,CAACQ,SAAS,CAACE,SAAX,EAAsBC,MAAM,CAACK,OAA7B;AAFjB,QAAT;AAIAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeR,SAAf,CAA9B;AAEA,aAAOA,SAAP;;AACF,SAAKb,eAAe,CAACsB,WAArB;AACET,MAAAA,SAAS,qBACJJ,SADI;AAEPE,QAAAA,SAAS,EAAET,kBAAkB,CAACO,SAAS,CAACE,SAAX,EAAsBC,MAAM,CAACK,OAA7B;AAFtB,QAAT;AAIAC,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeR,SAAf,CAA9B;AAEA,aAAOA,SAAP;;AACF,SAAKb,eAAe,CAACuB,oBAArB;AACEV,MAAAA,SAAS,qBACJJ,SADI;AAEPE,QAAAA,SAAS,EAAEF,SAAS,CAACE,SAAV,CAAoBa,MAApB,CACTC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBd,MAAM,CAACK,OAAP,CAAeS,EADlC;AAFJ,QAAT;AAOAR,MAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BC,IAAI,CAACC,SAAL,CAAeR,SAAf,CAA9B;AACA,aAAOA,SAAP;;AACF;AACE,aAAOJ,SAAP;AA9BJ;AAgCD,CAlCD;;AAoCA,MAAMkB,YAAY,GAAGC,KAAK,IAAI;AAC5B,QAAMC,aAAa,GAAG;AACpBnB,IAAAA,MAAM,EAAE,IADY;AAEpBC,IAAAA,SAAS,EAAE;AAFS,GAAtB;;AAD4B,sBAMEb,UAAU,CACtCU,OADsC,EAEtCY,IAAI,CAACU,KAAL,CAAWZ,YAAY,CAACa,OAAb,CAAqB,OAArB,CAAX,KAA6CF,aAFP,CANZ;AAAA;AAAA,QAMrBpB,SANqB;AAAA,QAMVuB,QANU;;AAW5B,SACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAE;AAAEvB,MAAAA,SAAF;AAAauB,MAAAA;AAAb,KAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,KAAK,CAACK,QADT,CADF;AAKD,CAhBD;;AAkBA,eAAeN,YAAf","sourcesContent":["import React, { useReducer, useEffect } from \"react\";\nimport { CartActionTypes } from \"../actions/cart.types\";\nimport { addItemToCart, removeItemFromCart } from \"../utils/cart.utils\";\nimport { useLocalStorage } from \"../hooks/useLocalStorage\";\n\nexport const CartContext = React.createContext({});\nexport const CartConsumer = CartContext.Consumer;\n\nconst reducer = (cartState = { hidden: true, cartItems: [] }, action) => {\n  let tempState;\n  switch (action.type) {\n    case CartActionTypes.TOGGLE_CART_HIDDEN:\n      return { ...cartState, hidden: !cartState.hidden };\n    case CartActionTypes.ADD_ITEM:\n      tempState = {\n        ...cartState,\n        cartItems: addItemToCart(cartState.cartItems, action.payload)\n      };\n      localStorage.setItem(\"state\", JSON.stringify(tempState));\n\n      return tempState;\n    case CartActionTypes.REMOVE_ITEM:\n      tempState = {\n        ...cartState,\n        cartItems: removeItemFromCart(cartState.cartItems, action.payload)\n      };\n      localStorage.setItem(\"state\", JSON.stringify(tempState));\n\n      return tempState;\n    case CartActionTypes.CLEAR_ITEM_FROM_CART:\n      tempState = {\n        ...cartState,\n        cartItems: cartState.cartItems.filter(\n          cartItem => cartItem.id !== action.payload.id\n        )\n      };\n\n      localStorage.setItem(\"state\", JSON.stringify(tempState));\n      return tempState;\n    default:\n      return cartState;\n  }\n};\n\nconst CartProvider = props => {\n  const INITIAL_STATE = {\n    hidden: true,\n    cartItems: []\n  };\n\n  const [cartState, dispatch] = useReducer(\n    reducer,\n    JSON.parse(localStorage.getItem(\"state\")) || INITIAL_STATE\n  );\n\n  return (\n    <CartContext.Provider value={{ cartState, dispatch }}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}